---
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";
import { getCollection } from "astro:content";
import MarkdownWrapper from "../../layouts/MarkdownWrapper.astro";
import { getEntries } from "astro:content";
import { Tag } from "components";

export async function getStaticPaths() {
  const resources = await getCollection("resources");

  return resources.map((resource) => ({
    params: {
      slug: resource.slug,
    },
    props: {
      resource,
    },
  }));
}

type Props = {
  resource: CollectionEntry<"resources">;
};

const { resource } = Astro.props;
const { Content } = await resource.render();
const { data: authorData } = await getEntry("team", resource.data.author.id);
const tags = await getEntries(resource.data.tags || []);
---

<MarkdownWrapper frontmatter={resource.data}>
  <div slot="header" class="mb-10">
    <h1 class="text-4xl font-medium">{resource.data.title}</h1>
    <div class="flex items-center space-x-2 text-gray-500">
      <time
        class="text-sm text-gray-600 dark:text-gray-400"
        datetime={resource.data.date.toISOString()}
      >
        {
          resource.data.date.toLocaleDateString("en-US", {
            timeZone: "UTC",
            dateStyle: "medium",
          })
        }
      </time>
      <div class="flex items-center space-x-2">
        {tags.map((tag) => <Tag tag={tag} />)}
      </div>
    </div>
  </div>
  <Content slot="content" />
</MarkdownWrapper>

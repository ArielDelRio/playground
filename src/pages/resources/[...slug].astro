---
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";
import { getCollection } from "astro:content";
import MarkdownWrapper from "../../layouts/MarkdownWrapper.astro";
import Avatar from "../../components/Avatar/Avatar.astro";
import { Image } from "astro:assets";
import Prose from "../../components/Prose/Prose.astro";

export async function getStaticPaths() {
  const resources = await getCollection("resources");

  return resources.map((resource) => ({
    params: {
      slug: resource.slug,
    },
    props: {
      resource,
    },
  }));
}

type Props = {
  resource: CollectionEntry<"resources">;
};

const { resource } = Astro.props;
const { Content } = await resource.render();
const { data: authorData } = await getEntry("team", resource.data.author.id);
---

<MarkdownWrapper frontmatter={resource.data}>
  <div class="my-2 flex items-center gap-2">
    <Avatar src={authorData.headshot} alt={authorData.name} size="w-12 h-12" />
    <span class="text-sm text-gray-600 dark:text-gray-400">
      By {authorData.name}
    </span>
    <span class="text-sm text-gray-600 dark:text-gray-400">â€¢</span>
    <time
      class="text-sm text-gray-600 dark:text-gray-400"
      datetime={resource.data.date.toISOString()}
    >
      {
        resource.data.date.toLocaleDateString("en-US", {
          timeZone: "UTC",
          dateStyle: "medium",
        })
      }
    </time>
  </div>
  <Content slot="content" />
</MarkdownWrapper>
